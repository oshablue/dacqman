{


  "textInputs": [

    {
      "label": "Set Tx Channel",
      "min" : 1,
      "max" : 8,
      "default" : 1,
      "command": {
        "type": "hexCsvBytes",
        "value": "0x53, 0x00, 0x00, 0x00, 0x08, 0x00, 0x02, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x50",
        "positionToReplaceWithTextInputBaseZero": "10"
      },
      "description": "Set Tx (or Pulse) channel.  The value in the text input box should be a 1-byte integer, and it will be passed as parameter 1 in the command."
    },

    {
      "label": "Set Tx Voltage",
      "min" : 0,
      "max" : 31,
      "default" : 0,
      "command": {
        "type": "hexCsvBytes",
        "value": "0x53, 0x00, 0x00, 0x00, 0x08, 0x00, 0x02, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x50",
        "positionToReplaceWithTextInputBaseZero": "10"
      },
      "description": "Set Tx (Pulse) voltage value.  0x00 - 0x1f.  BE CAREFUL.  The value in the text input box should be a 1-byte integer, and it will be passed as parameter 1 in the command."
    },

    {
      "label": "Set Rx Channel",
      "min" : 1,
      "max" : 8,
      "default" : 1,
      "command": {
        "type": "hexCsvBytes",
        "value": "0x53, 0x00, 0x00, 0x00, 0x08, 0x00, 0x03, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x50",
        "positionToReplaceWithTextInputBaseZero": "10"
      },
      "description": "Set Rx channel.  The value in the text input box should be a 1-byte integer, and it will be passed as parameter 1 in the command."
    },

    {
      "label": "Set Rx Gain",
      "min" : 0,
      "max" : 15,
      "default" : 0,
      "command": {
        "type": "hexCsvBytes",
        "value": "0x53, 0x00, 0x00, 0x00, 0x08, 0x00, 0x03, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x50",
        "positionToReplaceWithTextInputBaseZero": "10"
      },
      "description": "Set Rx gain value.  0x00 - 0x0f.  The value in the text input box should be a 1-byte integer, and it will be passed as parameter 1 in the command."
    },

    {
      "label": "Set Rx Delay",
      "min" : 0,
      "max" : 3,
      "default" : 0,
      "command": {
        "type": "hexCsvBytes",
        "value": "0x53, 0x00, 0x00, 0x00, 0x08, 0x00, 0x03, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x50",
        "positionToReplaceWithTextInputBaseZero": "10"
      },
      "description": "Set Rx Delay in 30 microseconds.  0x00 - 0x03.  0x00 is about an rx delay, as of this writing, of 2x 80MHz clocks.  For each additional +1, add 30 microseconds.  The maximum value corresponds to a delay of about 90 microseconds."
    }


  ],



"controlGroups" : [


  {
    "name" : "Tx Voltage",

    "buttons": [

      {
        "title": "Set Tx Voltage via DAC Output to 0x00 (zero-est)",
        "command": {
          "type": "hexCsvBytes",
          "value": "0x53, 0x00, 0x00, 0x00, 0x08, 0x00, 0x02, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x50"
        },
        "description": "Set Tx or Pulse voltage via the DAC output to near-est possible zero.",
        "returnDataTo" : "chart"
      },


      {
        "title": "Set Tx Voltage via DAC Output to 0x05 (Med)",
        "command": {
          "type": "hexCsvBytes",
          "value": "0x53, 0x00, 0x00, 0x00, 0x08, 0x00, 0x02, 0x00, 0x01, 0x00, 0x05, 0x00, 0x00, 0x50"
        },
        "description": "Set Tx or Pulse voltage via the DAC output to around middle range when using a -200VDC module with source VDD of 3.3VDC rail.",
        "returnDataTo" : "chart"
      },


      {
        "title": "Set Tx Voltage via DAC Output to 0x0f (Nominal Normal)",
        "command": {
          "type": "hexCsvBytes",
          "value": "0x53, 0x00, 0x00, 0x00, 0x08, 0x00, 0x02, 0x00, 0x01, 0x00, 0x0f, 0x00, 0x00, 0x50"
        },
        "description": "Set Tx or Pulse voltage via the DAC output to around designated nominal range when using a -200VDC module with source VDD of 3.3VDC rail.",
        "returnDataTo" : "chart"
      }

    ]
  },




{

  "name" : "Tx Channel",

  "buttons" : [

    {
      "title": "Set Tx Channel 1",
      "command": {
        "type": "hexCsvBytes",
        "value": "0x53, 0x00, 0x00, 0x00, 0x08, 0x00, 0x02, 0x00, 0x02, 0x00, 0x01, 0x00, 0x00, 0x50"
      },
      "description": "Set Tx channel to 1",
      "returnDataTo" : "chart"
    },

    {
      "title": "Set Tx Channel 2",
      "command": {
        "type": "hexCsvBytes",
        "value": "0x53, 0x00, 0x00, 0x00, 0x08, 0x00, 0x02, 0x00, 0x02, 0x00, 0x02, 0x00, 0x00, 0x50"
      },
      "description": "Set Tx channel to 1",
      "returnDataTo" : "chart"
    }
  ]
},





{

  "name" : "Rx Channel",

  "buttons" : [

    {
      "title": "Set Rx Channel 1",
      "command": {
        "type": "hexCsvBytes",
        "value": "0x53, 0x00, 0x00, 0x00, 0x08, 0x00, 0x03, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00, 0x50"
      },
      "description": "Set Rx channel to 1 (parameter1 = 0x01 - firmware handles the base 0x00 = Ch 1 part)",
      "returnDataTo" : "chart"
    },


    {
      "title": "Set Rx Channel 2",
      "command": {
        "type": "hexCsvBytes",
        "value": "0x53, 0x00, 0x00, 0x00, 0x08, 0x00, 0x03, 0x00, 0x01, 0x00, 0x02, 0x00, 0x00, 0x50"
      },
      "description": "Set Rx channel to 2 (parameter = 0x02 - firmware handles the base 0x00 = Ch 1 part",
      "returnDataTo" : "chart"
    },


    {
      "title": "Set Rx Channel 3",
      "command": {
        "type": "hexCsvBytes",
        "value": "0x53, 0x00, 0x00, 0x00, 0x08, 0x00, 0x03, 0x00, 0x01, 0x00, 0x03, 0x00, 0x00, 0x50"
      },
      "description": "Set Rx channel to 2 (parameter = 0x02 - firmware handles the base 0x00 = Ch 1 part",
      "returnDataTo" : "chart"
    },


    {
      "title": "Set Rx Channel 4",
      "command": {
        "type": "hexCsvBytes",
        "value": "0x53, 0x00, 0x00, 0x00, 0x08, 0x00, 0x03, 0x00, 0x01, 0x00, 0x04, 0x00, 0x00, 0x50"
      },
      "description": "Set Rx channel to 2 (parameter = 0x02 - firmware handles the base 0x00 = Ch 1 part",
      "returnDataTo" : "chart"
    }
  ]
},






{

  "name" : "Rx Gain",

  "buttons" : [

    {
      "title": "Set Rx Gain to 0 (Min)",
      "command": {
        "type": "hexCsvBytes",
        "value": "0x53, 0x00, 0x00, 0x00, 0x08, 0x00, 0x03, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x50"
      },
      "description": "Set Rx Gain to 0, the minimum",
      "returnDataTo" : "chart"
    },


    {
      "title": "Set Rx Gain to 0x0F (Max)",
      "command": {
        "type": "hexCsvBytes",
        "value": "0x53, 0x00, 0x00, 0x00, 0x08, 0x00, 0x03, 0x00, 0x02, 0x00, 0x0F, 0x00, 0x00, 0x50"
      },
      "description": "Set Rx Gain to 0x0F, the maximum",
      "returnDataTo" : "chart"
    }
  ]
},








{

  "name" : "PAQ Mode",

  "buttons" : [

      {
        "title": "Set PAQ Mode Single and Get a PAQ WF",
        "command": {
          "type": "hexCsvBytes",
          "value": "0x53, 0x00, 0x00, 0x00, 0x08, 0x00, 0x04, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x50"
        },
        "description": "Set PAQ mode to single pulse and acquire",
        "returnDataTo" : "chart",
        "options" : [
          {
            "key" : "singleCaptureBuffer",
            "value" : "true"
          }
        ]
      },


      {
        "title": "Set PAQ Mode Continuous",
        "command": {
          "type": "hexCsvBytes",
          "value": "0x53, 0x00, 0x00, 0x00, 0x08, 0x00, 0x04, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x50"
        },
        "description": "Set PAQ mode to continuous acquisition",
        "returnDataTo" : "chart",
        "options" : [
          {
            "key" : "captureBufferMultiple",
            "value" : 3
          }
        ]
      },


      {
        "title": "Set PAQ Mode Continuous Channel Scan",
        "command": {
          "type": "hexCsvBytes",
          "value": "0x53, 0x00, 0x00, 0x00, 0x08, 0x00, 0x04, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x50"
        },
        "description": "Set PAQ mode to continuous acquisition while channel-change scanning all channels",
        "returnDataTo" : "chart",
        "options" : [
          {
            "key" : "captureBufferMultiple",
            "value" : 8
          }
        ]
      }
    ]
  },







  {
    "name" : "Alt (ADC, Aux, Etc.)",

    "buttons": [

      {
        "title": "Get ADC Sample",
        "command": {
          "type": "hexCsvBytes",
          "value": "0x53, 0x00, 0x00, 0x00, 0x08, 0x00, 0x05, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x50"
        },
        "description": "Get a basic ADC sample from the re-purposed programming pin (after program, pin is re-purposed). Currently RB6 or PGC.  Currently pin 5 in the programming header. 10-bit max of 1023.  Please see cautions and notes regarding implementation in the MCU code.",
        "returnDataTo" : "log"
      }

    ]
  },









{

  "name" : "Chained Commands",

  "buttons" : [

    {
      "title": "Basic CH 1 Cont PAQ Setup Chain",
      "command": {
        "type": "hexCsvBytesChained",
        "chainedCmdDelayMs" : "1500",
        "chainedCmdTimeoutMs" : "1000",
        "chainedCmdCompleteChar" : "0x0D",
        "value": [
          "0x53, 0x00, 0x00, 0x00, 0x08, 0x00, 0x03, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00, 0x50",
          "0x53, 0x00, 0x00, 0x00, 0x08, 0x00, 0x02, 0x00, 0x02, 0x00, 0x01, 0x00, 0x00, 0x50",
          "0x53, 0x00, 0x00, 0x00, 0x08, 0x00, 0x03, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x50",
          "0x53, 0x00, 0x00, 0x00, 0x08, 0x00, 0x02, 0x00, 0x01, 0x00, 0x0f, 0x00, 0x00, 0x50",
          "0x53, 0x00, 0x00, 0x00, 0x08, 0x00, 0x04, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x50"
        ],
        "description-summary" : "Command chain/sequence as implemented in UT software style Send Settings and PAC, without pulse shaping and duration controls.",
        "description-detail" : [
          "1. Set Rx Ch 1",
          "2. Set Tx Ch 1",
          "3. Set Rx Gain 0x00",
          "4. Set HIVDC Tx voltage to nominal",
          "5. Start continuous PAQ"
        ]
      },
      "description": "Pulse and Acquire setting the Tx and Rx channels, and the Tx and Rx gains, oh and Rx delay too",
      "returnDataTo" : "chart"
    },

    {
      "title": "Basic CH 2 Cont PAQ Setup Chain Kabam",
      "command": {
        "type": "hexCsvBytesChained",
        "chainedCmdDelayMs" : "1500",
        "chainedCmdTimeoutMs" : "1000",
        "chainedCmdCompleteChar" : "0x0D",
        "value": [
          "0x53, 0x00, 0x00, 0x00, 0x08, 0x00, 0x03, 0x00, 0x01, 0x00, 0x02, 0x00, 0x00, 0x50",
          "0x53, 0x00, 0x00, 0x00, 0x08, 0x00, 0x02, 0x00, 0x02, 0x00, 0x02, 0x00, 0x00, 0x50",
          "0x53, 0x00, 0x00, 0x00, 0x08, 0x00, 0x03, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x50",
          "0x53, 0x00, 0x00, 0x00, 0x08, 0x00, 0x02, 0x00, 0x01, 0x00, 0x0f, 0x00, 0x00, 0x50",
          "0x53, 0x00, 0x00, 0x00, 0x08, 0x00, 0x04, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x50"
        ],
        "description-summary" : "Command chain/sequence as implemented in UT software style Send Settings and PAC, without pulse shaping and duration controls.",
        "description-detail" : [
          "1. Set Rx Ch 1",
          "2. Set Tx Ch 1",
          "3. Set Rx Gain 0x00",
          "4. Set HIVDC Tx voltage to nominal",
          "5. Start continuous PAQ"
        ]
      },
      "description": "Pulse and Acquire setting the Tx and Rx channels, and the Tx and Rx gains, oh and Rx delay too",
      "returnDataTo" : "chart"
    },

    {
      "title": "Acquire 2-min Channel Scan To File...",
      "command": {
        "type": "hexCsvBytesChained",
        "chainedCmdDelayMs" : "120000",
        "chainedCmdTimeoutMs" : "1000",
        "chainedCmdCompleteChar" : "",
        "value": [
          "0x53, 0x00, 0x00, 0x00, 0x08, 0x00, 0x04, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x50",
          "0x53, 0x00, 0x00, 0x00, 0x08, 0x00, 0x04, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x50"
        ],
        "description-summary" : "Command chain/sequence to set PAQ to continuous channel scan and stop after 2 minutes by putting the hardware back into single acquire mode.  You will need to set the Tx voltage and Rx gain separately.",
        "description-detail" : [
          "0. Please set up Tx and Rx voltage/gain prior.",
          "1. Start continuous channel scanning.",
          "2. Stop continuous scan and switch back to single/manual acquisition mode."
        ]
      },
      "description": "Scan all channels continuously for 2 minutes.",
      "returnDataTo" : "chart",
      "options" : [
        {
          "key" : "fileCapture",
          "value" : "true"
        },
        {
          "key" : "captureBufferMultiple",
          "value" : 8
        },
        {
          "key" : "captureSizeBytes",
          "value" : {
            "number" : "62899200",
            "note" : "62899200 = 128 Hz (16 Hz/chan x 8 chans) * 4095 samples/waveform * 2 minutes (120 seconds)"
          }
        }
      ]
    }

  ]
}
]


}
