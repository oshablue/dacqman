{
  "name": "dacqman",
  "version": "0.0.18",
  "description": "Data Acquisition and Management Tool (Demo/R&D) especially for OshaBlue LLC Ultrasonic NDT scanning hardware (HDL-0108-RSCPT, RS104, DL-Series)",
  "main": "main.js",
  "repository": "https://github.com/oshablue/dacqman.git",
  "scripts": {
    "start": "electron .",
    "install-bak": "npm run -s rebuild-ftdi & npm run -s rebuild-serialport",
    "rebuild-ftdi": "electron-rebuild --only ftdi",
    "rebuild-serialport": "electron-rebuild -o serialport",
    "package-packed-mac": "electron-packager . --overwrite --platform=darwin --arch=x64 --asar.unpackDir=plugins --icon=assets/icons/mac/icon.icns --prune=true --out=release-builds",
    "package-packed-win": "electron-packager . dacqman --overwrite --platform=win32 --arch=x64 --asar.unpackDir=plugins --icon=assets/icons/win/icon.ico --prune=true --out=release-builds --version-string.CompanyName=CE --version-string.FileDescription=CE --version-string.ProductName=\"DacqMan\"",
    "package-packed-linux": "electron-packager . dacqman --overwrite --asar=true --platform=linux --arch=x64 --icon=assets/icons/png/icon.png --prune=true --out=release-builds",
    "package-unpacked-mac": "electron-packager . --overwrite --platform=darwin --arch=x64 --icon=assets/icons/mac/icon.icns --prune=true --out=release-builds",
    "package-unpacked-win": "electron-packager . dacqman --overwrite --platform=win32 --arch=x64 --icon=assets/icons/win/icon.ico --prune=true --out=release-builds --version-string.CompanyName=CE --version-string.FileDescription=CE --version-string.ProductName=\"DacqMan\"",
    "test": "mocha",
    "test:all": "mocha -R mocha-jenkins-reporter --timeout 20000 \"./src/test/**/*test-*.js\"",
    "test:one": "mocha --watch -u bdd \"./src/test/**/test-*.js\" --grep \"test-store\""
  },
  "author": "OshaBlue LLC / nisch s.",
  "license": "MIT",
  "dependencies": {
    "audio-generator": "^2.1.2",
    "audio-speaker": "^1.5.1",
    "csv": "^5.3.2",
    "data-table": "^2.0.0",
    "electron-edge-js": "^12.18.5",
    "envelope-generator": "^3.0.0",
    "ftdi-d2xx": "^1.1.2",
    "serialport": "^10.5.0",
    "strftime": "^0.10.0"
  },
  "devDependencies": {
    "@types/mocha": "^10.0.1",
    "chai": "^4.2.0",
    "chai-as-promised": "^7.1.1",
    "electron": "7.3.3",
    "electron-packager": "^13.1.1",
    "electron-rebuild": "^3.2.9",
    "mocha": "^8.4.0",
    "spectron": "^6.0.0"
  },
  "comments": {
    "nvm use": "12.8.1 which matches electron 7.3.3",
    "darwin npm i plain won't work": [
      "electron-edge-js tries to install using node-gyp older like 5.0.3 and you get an error about maybe this is a node-gyp bug so update.",
      "but npm uses its own node-gyp - so see: https://github.com/nodejs/node-gyp/blob/main/docs/Updating-npm-bundled-node-gyp.md",
      "and this worked: $ npm explore npm/node_modules/npm-lifecycle -g -- npm install node-gyp@latest",
      "but then you still get the issue that with this old tested 12.18.5 of elec-edge-js it has the atom.io out of date links for headers",
      "(and somehow yes installVersion doesn't work so it wants to download and rebuild",
      "so you need from https://www.electronjs.org/docs/latest/tutorial/using-native-node-modules",
      "export npm_config_disturl=https://electronjs.org/headers",
      "and that seems to work.",
      "but then there is an error that again breaks elec-edge-js build about openssl_fips so see: https://github.com/nodejs/node-gyp/issues/2673",
      "and then npm i --verbose --openssl_fips='' seems to actually work in our case for now and for these versions" 
    ],
    "win 10 vm": [
      "make sure to close VSCode before npm i such that file renaming and deletion doesn't break creating a whole chain of annoyances"
    ]
  }
}
